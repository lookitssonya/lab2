#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

// Функция для умножения матриц
vector<vector<int>> multiplyMatrices(vector<vector<int>>& matrix1, vector<vector<int>>& matrix2) {
    int m = matrix1.size();
    int n = matrix1[0].size();

    vector<vector<int>> result(m, vector<int>(1, 0));

    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            result[i][0] += matrix1[i][j] * matrix2[j][0];
        }
    }

    return result;
}

int main() {
    // Чтение исходных данных из файлов
    ifstream input1("C:\\Users\\Журавлевы\\Desktop\\in1.txt");
    ifstream input2("C:\\Users\\Журавлевы\\Desktop\\in2.txt");
    ofstream output("C:\\Users\\Журавлевы\\Desktop\\out.txt");

    int k, m, n;
    input1 >> k >> m >> n;

    for (int i = 0; i < k; ++i) {
        // Чтение первой матрицы
        vector<vector<int>> matrix1(m, vector<int>(n));
        for (int j = 0; j < m; ++j) {
            for (int l = 0; l < n; ++l) {
                input1 >> matrix1[j][l];
            }
        }

        // Чтение второй матрицы
        vector<vector<int>> matrix2(n, vector<int>(1));
        for (int j = 0; j < n; ++j) {
            input2 >> matrix2[j][0];
        }

        // Умножение матриц и запись результата в третий файл
        vector<vector<int>> result = multiplyMatrices(matrix1, matrix2);

        // Запись в третий файл
        output << "Матрица 1:" << endl;
        for (int i = 0; i < matrix1.size(); ++i) {
            for (int j = 0; j < matrix1[i].size(); ++j) {
                output << matrix1[i][j] << " ";
            }
            output << endl;
        }

        output << "Матрица 2:" << endl;
        for (int i = 0; i < matrix2.size(); ++i) {
            for (int j = 0; j < matrix2[i].size(); ++j) {
                output << matrix2[i][j] << " ";
            }
            output << endl;
        }

        output << "Результат:" << endl;
        for (int i = 0; i < result.size(); ++i) {
            output << result[i][0] << endl;
        }

    }

    input1.close();
    input2.close();
    output.close();

    return 0;
}
